## XIP

메모리 상에서 직접 Program-code를 실행 할 수 있는 능력을 말한다.

Word 단위의 Access가 가능하며 Software을 Execution 할 수 있는 능력

## RAM에 관하여

SRAM : Static ! 가장 비싼 램 → 전하 충전이 필요가 없다

PSRAM : 슈도 SRAM → 하드웨어적으로 전하 충전해주는 DRAM

DRAM : 가장 싼 램 → 전하 충전이 필요하다

SDRAM : 요즘 젤 많이 쓰는놈. S가 Synchronous임.. 즉 동기 DRAM 임 DRAM의 파생제품이라 보면 되는데 CPU BUS랑 클럭을 동기화 시킨거다. 왜 클럭이랑 동기화 되면 속도가 올라가냐? 파이프라이닝을 할 수 있기 때문이다.

DDR :  Double Data Rate라는건데 밑에 보면 이해된다 동기화때문에 클럭이랑 데이터를 같이 보냄

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c187fa63-ae04-4ef9-922b-073b43f06fc6/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c187fa63-ae04-4ef9-922b-073b43f06fc6/Untitled.png)

## Random Access 방식은?

행열 치면 바로 거기로 가는 방식

## ROM에 관하여

NOR → Cell이 병렬로 연결되어 있고 Ram처럼 Byte Access 가능, XiP 지원

쓰기와 지우기는 느리지만 읽기는 빠르다 why?

NAND → Cell이 직렬로 연결되어 있고 Page단위로 읽을 수 있음.

읽기는 느리지만 쓰기와 지우기가 빠르다 why?

NAND와 NOR 모두 둘다 Block 단위이고 0으로 지우는것이 아니라 charging을 하는 경우라 지우고 난 block은 0xFF로 채워져 있다.

그렇다면 SSD (NAND) 를 이용해서 지운 데이터는 복구하기 힘들까? → HDD처럼 제로필 하는것 (SSD니까 FF필?) 을 TRIM이라고 하는데.. 결국 이걸 하느냐 마느냐에 따라 달림

## SSD

SSD는 NAND 방식을 이용하여 저장되어 있고, 컨트롤러랑 DRAM이 달려있다. DRAM이 필요한 이유는 SSD 내부 데이터의 매핑 방식때문에 필요하다. 즉 속도때문은 아님. OS는 HDD구성인 트랙과 섹터를 기반으로 동작하는데 SSD는 블록과 페이지로 구성되어 작동을 못해서 OS의 Logical Address와 NAND의 Physical Address를 서로 치환해주는 어드레스 매핑이 필요하다는 것임 보통 용량당 1000:1이고 디렘리스도 있는데 이건 NAND에 저장하고 그 위치를 컨트롤러의 SRAM에 저장하는방식임 그때는 NAND가 SLC로 써야겠지? (1셀당 1bit)

R/W 할 때 한 블럭 다쓴다면 (16KB) 누가 계속 1byte씩 쓰면 셸을 다쓰게 되는건가? → 그러면 데이터를 옮기고 원래 있던곳은 없애버림. 수명은 줄겠지

## SSD 어드레스 매핑이란?

TFL(Flash Translation Layer)이 담당. 가비지 컬렉션이랑 Logical Block Mapping을 담당하는데 LBM은 Logical Block Address를 Flash의 Physical Block Address로 변환해준다. 요게 SSD의 DRAM에 저장됨
